{"version":3,"sources":["components/Navbar.js","components/Form.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","Text","useState","text","setText","style","color","heading","onChange","event","target","value","backgroundColor","rows","upperText","toUpperCase","showAlert","toLowerCase","split","length","Alert","alert","role","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oMAEe,SAASA,EAAOC,GAC3B,OACE,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACA,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,uBACA,wBAAQF,UAAU,iBAAiBG,KAAK,SAASC,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,oBAA5L,SACE,sBAAMR,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BS,GAAG,yBAA7C,UACE,oBAAIT,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,eAAeU,eAAa,OAAOR,KAAK,IAArD,sBAGJ,sBAAKF,UAAS,sCAA+C,UAAdD,EAAME,KAAgB,OAAO,SAA5E,UACA,uBAAOD,UAAU,mBAAmBG,KAAK,WAAWM,GAAG,yBAAyBE,QAAUZ,EAAMa,aAChG,uBAAOZ,UAAU,mBAAmBa,QAAQ,yBAA5C,oCChBK,SAASC,EAAKf,GAAQ,IAAD,EACTgB,mBAAS,IADA,mBACzBC,EADyB,KACpBC,EADoB,KAqBhC,OACI,qCACA,sBAAKjB,UAAU,aAAckB,MAAO,CAACC,MAAqB,UAAdpB,EAAME,KAAgB,QAAQ,SAA1E,UACI,6BAAKF,EAAMqB,UACP,qBAAKpB,UAAU,OAAf,SACE,0BAAUA,UAAU,eAAeS,GAAG,8BAA8BY,SATjE,SAACC,GACdL,EAAQK,EAAMC,OAAOC,QAQ6EN,MAAO,CAACO,gBAA+B,UAAd1B,EAAME,KAAgB,UAAU,UAAUkB,MAAqB,UAAdpB,EAAME,KAAgB,QAAQ,SAAUuB,MAAOR,EAAMU,KAAK,QAE7N,wBAAQ1B,UAAU,uBAAuBW,QA1BhC,WAClB,IAAIgB,EAAYX,EAAKY,cACrBX,EAAQU,GACR5B,EAAM8B,UAAW,0BAA2B,YAuBnC,kCACA,wBAAQ7B,UAAU,wBAAwBW,QAtBjC,WAClB,IAAIgB,EAAYX,EAAKc,cACrBb,EAAQU,GACR5B,EAAM8B,UAAW,0BAA2B,YAmBnC,kCACA,wBAAQ7B,UAAU,wBAAwBW,QAlBrC,WAEdM,EADgB,IAEhBlB,EAAM8B,UAAW,gBAAiB,YAezB,2BAET,sBAAK7B,UAAU,iBAAiBkB,MAAO,CAACC,MAAqB,UAAdpB,EAAME,KAAgB,QAAQ,SAA7E,UACI,mDACA,kCAAKe,EAAKe,MAAM,KAAKC,OAAQ,EAA7B,cAA6ChB,EAAKgB,OAAlD,gBACA,kCAAM,KAAQhB,EAAKe,MAAM,KAAKC,OAAS,GAAvC,kBACA,yCACA,4BAAIhB,EAAKgB,OAAO,EAAIhB,EAAM,yDC3BvBiB,MAVf,SAAelC,GACX,OACIA,EAAMmC,OAAS,8BACX,sBAAKlC,UAAU,sBAAsBmC,KAAK,QAA1C,UACD,iCAASpC,EAAMmC,MAAM/B,OADpB,IACoCJ,EAAMmC,MAAME,UCkD7CC,MA5Cf,WAAgB,IAAD,EACWtB,mBAAS,SADpB,mBACNd,EADM,KACAqC,EADA,OAEavB,mBAAS,MAFtB,mBAENmB,EAFM,KAECK,EAFD,KAGPV,EAAY,SAACW,EAASrC,GAC1BoC,EAAS,CACPH,IAAKI,EACLrC,KAAMA,IAERsC,YAAW,WACTF,EAAS,QACR,MAYL,OACE,qCAEA,cAAC,EAAD,CAAOL,MAAOA,IACZ,cAACpC,EAAD,CAAQG,KAAMA,EAAMW,WAdL,WACJ,UAATX,GACHqC,EAAS,QACZI,SAASC,KAAKzB,MAAMO,gBAAkB,UACtCI,EAAU,mBAAmB,aAE3BS,EAAS,SACTI,SAASC,KAAKzB,MAAMO,gBAAkB,UACtCI,EAAU,oBAAqB,eAO3B,qBAAK7B,UAAU,YAAf,SAME,cAACc,EAAD,CAAMe,UAAWA,EAAWT,QAAQ,4BAA4BnB,KAAMA,UCjCjE2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFb,SAASc,eAAe,SAM1BZ,K","file":"static/js/main.69a726a2.chunk.js","sourcesContent":["import React from 'react'\n// import { a } from 'react-router-dom'\nexport default function Navbar(props) {\n    return (\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"#\">TextUtils</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <a className=\"nav-a active\" aria-current=\"page\" href=\"#\">Home</a>\n            </li>\n          </ul>\n          <div className={`form-check form-switch text-${props.mode=== 'light'?'dark':'light'}`}>\n          <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick ={props.toggleMode}/>\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Change Them</label>\n        </div>\n        </div>\n      </div>\n    </nav>\n      )\n}\n\n","import React, {useState} from 'react'\n\nexport default function Text(props) {\n    const [text,setText] = useState(\"\")\n    const handleUpClick = () => {\n        let upperText = text.toUpperCase()\n        setText(upperText)\n        props.showAlert (\"converted to uppercase!\", \"Success\")\n    }\n    const handleloClick = () => {\n        let upperText = text.toLowerCase()\n        setText(upperText)\n        props.showAlert (\"converted to lowercase!\", \"Success\")\n    }\n    const clearText = () => {\n        let upperText = \"\"\n        setText(upperText)\n        props.showAlert (\"Text cleared!\", \"Success\")\n    }\n    const onChange = (event) => {\n        setText(event.target.value)\n    }\n\n    return (\n        <>\n        <div className=\"conatainer\"  style={{color: props.mode=== 'light'?'black':'white'}} >\n            <h1>{props.heading}</h1>\n                <div className=\"mb-3\">\n                  <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" onChange={onChange} style={{backgroundColor: props.mode=== 'light'?'#e6e8eb':'#323a42',color: props.mode=== 'light'?'black':'white'}} value={text} rows=\"8\"></textarea>\n                </div>\n                 <button className=\"btn btn-primary mx-4\" onClick={handleUpClick}>Convert to Uppercase</button>\n                 <button className=\"btn btn-primary  mx-4\" onClick={handleloClick}>Convert to Lowercase</button>\n                 <button className=\"btn btn-primary  mx-4\" onClick={clearText}> Cleartext</button>\n        </div>\n        <div className=\"container my-2\" style={{color: props.mode=== 'light'?'black':'white'}} >\n            <h1>Your text summary</h1>\n            <p> {text.split(\" \").length -1  } words and {text.length } characers</p>\n            <p> { 0.08 * (text.split(\" \").length - 1)}Minutes read</p>\n            <h2>Preview</h2>\n            <p>{text.length>0 ? text :\"Enter something in the box to preview it here \"}</p>\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    return (\n        props.alert && <div>\n            <div className=\"alert alert-success\" role=\"alert\">\n           <strong>{props.alert.type}</strong> {props.alert.msg}\n        </div>\n        </div>\n    )\n}\n\nexport default Alert\n","import { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Text from './components/Form';\n//import About from './components/About'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n  const toggleMode = () =>{\n    if (mode === 'light')\n    {setMode ('dark')\n  document.body.style.backgroundColor = \"#192640\"\n  showAlert(\"Dark mode enable\",\"Success\")}\n  else {\n    setMode ('light')\n    document.body.style.backgroundColor = \"#e0fffc\"\n    showAlert(\"Light mode enable\", \"Success\")\n  }}\n  return (\n    <>\n    {/* <Router> */}\n    <Alert alert={alert}/>\n      <Navbar mode={mode} toggleMode={toggleMode}/>\n        <div className=\"container\">\n        {/* <Switch>\n          <Route exact path=\"/about\">\n          <About mode={mode}/>\n          </Route>\n          <Route exact path=\"/\"> */}\n          <Text showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode}/>\n        {/* </Route>\n     </Switch> */}\n         \n        </div>\n        {/* </Router> */}\n    </>\n \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}